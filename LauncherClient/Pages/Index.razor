@page "/"
@attribute [Authorize]

<MudText Class="mt-3" Typo="Typo.h3">Добро пожаловать</MudText>
<MudDivider Class="mt-2" />
<MudStack Class="align-content-center">
    <MudTabs Centered="true">
        <MudTabPanel Text="Десктопные приложения" Icon="@Icons.Material.Filled.DesktopWindows">
            <ProjectsList IsWinService="false" />
        </MudTabPanel>
        <MudTabPanel Text="Службы Windows" Icon="@Icons.Material.Filled.MiscellaneousServices">
            <ProjectsList IsWinService="true" />
        </MudTabPanel>
    </MudTabs>
    <AuthorizeView Roles="Dev">
        <Authorized>
            <MudButton Class="mt-n12" Style="align-self:center; width: 300px" Href="/createProject" Variant="Variant.Filled">Добавить новое приложение</MudButton>
        </Authorized>
    </AuthorizeView>
</MudStack>

@code {
    [CascadingParameter] public Task<AuthenticationState> AuthTask { get; set; }

    private System.Security.Claims.ClaimsPrincipal user;

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthTask;
        this.user = authState.User;
        AuthStateProvider.AuthenticationStateChanged += async (s) => 
        {
            await InvokeAsync(() => StateHasChanged());
        };
    }
}
